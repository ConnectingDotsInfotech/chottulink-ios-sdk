// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios15.6-simulator -enable-objc-interop -enable-library-evolution -swift-version 6 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -module-name ChottuLinkSDK
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Foundation
import OSLog
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct ResolvedLink : Swift.Codable, Swift.Sendable {
  public let link: Foundation.URL?
  public let shortLink: Foundation.URL?
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
@_Concurrency.MainActor public protocol ChottuLinkDelegate : AnyObject {
  @_Concurrency.MainActor func chottuLink(didInitializeWith configuration: ChottuLinkSDK.CLConfiguration)
  @_Concurrency.MainActor func chottuLink(didFailToInitializeWith error: any Swift.Error)
  @_Concurrency.MainActor func chottuLink(didResolveDeepLink link: Foundation.URL, metadata: [Swift.String : Any]?)
  @_Concurrency.MainActor func chottuLink(didFailToResolveDeepLink originalURL: Foundation.URL?, error: any Swift.Error)
}
extension ChottuLinkSDK.ChottuLinkDelegate {
  @_Concurrency.MainActor public func chottuLink(didInitializeWith configuration: ChottuLinkSDK.CLConfiguration)
  @_Concurrency.MainActor public func chottuLink(didFailToInitializeWith error: any Swift.Error)
  @_Concurrency.MainActor public func chottuLink(didResolveDeepLink link: Foundation.URL, metadata: [Swift.String : Any]?)
  @_Concurrency.MainActor public func chottuLink(didFailToResolveDeepLink originalURL: Foundation.URL?, error: any Swift.Error)
}
public enum ChottuLinkError : Foundation.LocalizedError {
  case badRequest
  case duplicatePath
  case invalidAPIKey
  case invalidURL
  case invalidResponse
  case missingKeys(keys: [Swift.String])
  case notInitialized
  case networkError(any Swift.Error)
  case serverError(statusCode: Swift.Int)
  public var errorDescription: Swift.String? {
    get
  }
}
public struct CLConfiguration {
  public var apiKey: Swift.String
  public var isDebugEnabled: Swift.Bool
  public var delegate: (any ChottuLinkSDK.ChottuLinkDelegate)?
  public init(apiKey: Swift.String, isDebugEnabled: Swift.Bool = false, delegate: (any ChottuLinkSDK.ChottuLinkDelegate)? = nil)
}
public enum CLDynamicLinkBehaviour : Swift.Int, Swift.CaseIterable, Swift.Codable, Swift.Sendable {
  case browser
  case app
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [ChottuLinkSDK.CLDynamicLinkBehaviour]
  public typealias RawValue = Swift.Int
  nonisolated public static var allCases: [ChottuLinkSDK.CLDynamicLinkBehaviour] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public struct CLDynamicLinkBuilder : Swift.Codable, Swift.Sendable {
  public init(destinationURL: Swift.String, domain: Swift.String)
  @discardableResult
  public func setIOSBehaviour(_ behaviour: ChottuLinkSDK.CLDynamicLinkBehaviour) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setAndroidBehaviour(_ behaviour: ChottuLinkSDK.CLDynamicLinkBehaviour) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setLinkName(_ name: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setSelectedPath(_ path: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setSocialTitle(_ title: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setSocialDescription(_ description: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setSocialImageUrl(_ imageUrl: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setUTMCampaign(_ campaign: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setUTMContent(_ content: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setUTMMedium(_ medium: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setUTMSource(_ source: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setUTMTerm(_ term: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
  public func build() -> ChottuLinkSDK.CLDynamicLinkBuilder
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
extension ChottuLinkSDK.CLDynamicLinkBuilder {
  @discardableResult
  public func setUTMParameters(source: Swift.String, medium: Swift.String, campaign: Swift.String, content: Swift.String? = nil, term: Swift.String? = nil) -> ChottuLinkSDK.CLDynamicLinkBuilder
  @discardableResult
  public func setSocialParameters(title: Swift.String, description: Swift.String, imageUrl: Swift.String) -> ChottuLinkSDK.CLDynamicLinkBuilder
}
@objc @_hasMissingDesignatedInitializers @_Concurrency.MainActor final public class ChottuLink : ObjectiveC.NSObject {
  @_Concurrency.MainActor public static func initialize(config: ChottuLinkSDK.CLConfiguration)
  @_Concurrency.MainActor public static func handleLink(_ shortURL: Foundation.URL)
  @available(swift, deprecated: 5.5, message: "Use the async version of `createDynamicLink(for:)` instead.")
  @_Concurrency.MainActor public static func createDynamicLink(for link: ChottuLinkSDK.CLDynamicLinkBuilder, completion: @escaping (_ link: Swift.String?, _ error: (any Swift.Error)?) -> Swift.Void)
  @_Concurrency.MainActor public static func createDynamicLink(for link: ChottuLinkSDK.CLDynamicLinkBuilder) async throws -> Swift.String?
  @_Concurrency.MainActor public static func getAppLinkDataFromUrl(from shortURL: Swift.String) async throws -> ChottuLinkSDK.ResolvedLink
  @objc deinit
}
extension ChottuLinkSDK.CLDynamicLinkBehaviour : Swift.Equatable {}
extension ChottuLinkSDK.CLDynamicLinkBehaviour : Swift.Hashable {}
extension ChottuLinkSDK.CLDynamicLinkBehaviour : Swift.RawRepresentable {}
extension ChottuLinkSDK.ChottuLink : Swift.Sendable {}
